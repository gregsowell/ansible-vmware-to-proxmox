---
- name: Use ovftool to pull vms from vmware and import into proxmox
  hosts: all
  gather_facts: false
  vars:

    proxmox_auth: &proxmox_auth
      api_host: proxmox.gregsowell.com
      api_user: "{{ gen2_user }}"
      # api_user: root@pam # username format example
      # Use standard password
      api_password: "{{ gen2_pword }}"
      # Use api token and secret - example format
      # api_token_id: gregisa5.0
      # api_token_secret: 72a72987-ff68-44f1-9fee-c09adaaecf4d

    #Full path to ovftool directory
    ovftool_path: /root/ovftool

    #Hostname or IP of vmware vcenter
    vmware_host: 10.0.2.10

    #Hostname or IP of proxmox
    proxmox_host: proxmox.gregsowell.com

    #Datacenter the VMs are in
    vmware_datacenter: MNS

    #Directory path to vms
    vmware_directory: Greg/ciq

    #VMware username
    # vmware_username: administrator
    vmware_username: "{{ gen1_user }}"

    #VMware password
    # vmware_password: test
    vmware_password: "{{ gen1_pword }}"

    #Proxmox migration folder
    proxmox_migration_dir: /root/migration
    
    #Storage proxmox will import new vms into with qm import command
    proxmox_storage: local-lvm

  tasks:
    - name: Add proxmox host to inventory
      ansible.builtin.add_host:
        name: "{{ proxmox_host }}"
        # groups: just_created
        ansible_host: "{{ proxmox_host }}"
      run_once: true

    - name: Create the proxmox migration directory if it doesn't exist
      ansible.builtin.file:
        path: "{{ proxmox_migration_dir }}"
        state: directory
        mode: '0755'
      delegate_to: "{{ proxmox_host }}"
      run_once: true

    - name: Check for each host and see if they already have an export folder created
      stat:
        path: "{{ proxmox_migration_dir }}/{{ hostvars[inventory_hostname].config.name }}"
      register: directory_status
      delegate_to: "{{ proxmox_host }}"

    - name: Block for exporting/importing hosts
      when: inventory_hostname != proxmox_host and ( not directory_status.stat.exists or not directory_status.stat.isdir )
      block:
        - name: Run ovftool to export vm from vmware to proxmox server if folder isn't already there
          ansible.builtin.shell: "{{ ovftool_path }}/ovftool --noSSLVerify vi://{{ vmware_username }}:{{ vmware_password }}@{{ vmware_host }}:443/{{ vmware_datacenter }}/vm/{{ vmware_directory }}/{{ hostvars[inventory_hostname].config.name }} ."
          args:
            chdir: "{{ proxmox_migration_dir }}/"
          delegate_to: "{{ proxmox_host }}"
          no_log: true

        - name: Call task file to provision new proxmox vm.  Loop over hosts in play
          ansible.builtin.include_tasks:
            file: import-ovf.yml
          run_once: true
          loop: "{{ play_hosts }}"

        - name: Modify proxmox vms to have required settings
          community.general.proxmox_kvm:
            <<: *proxmox_auth
            name: "{{ hostvars[inventory_hostname].config.name }}"
            node: proxmox
            scsihw: virtio-scsi-pci
            cpu: x86-64-v2-AES
            bios: ovmf
            net:
              net0: 'virtio,bridge=vmbr0,firewall=1'
            efidisk0:
              storage: "{{ proxmox_storage }}"
              format: raw
              efitype: 4m
              pre_enrolled_keys: false	
            update: true
          delegate_to: localhost

        - name: Start VM
          community.general.proxmox_kvm:
            <<: *proxmox_auth
            name: "{{ hostvars[inventory_hostname].config.name }}"
            node: proxmox
            state: started
          delegate_to: localhost
          ignore_errors: true